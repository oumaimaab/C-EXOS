#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ex3
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertAssociation(Association instance);
    partial void UpdateAssociation(Association instance);
    partial void DeleteAssociation(Association instance);
    partial void InsertDonateur(Donateur instance);
    partial void UpdateDonateur(Donateur instance);
    partial void DeleteDonateur(Donateur instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::ex3.Properties.Settings.Default.DBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Association> Association
		{
			get
			{
				return this.GetTable<Association>();
			}
		}
		
		public System.Data.Linq.Table<Donateur> Donateur
		{
			get
			{
				return this.GetTable<Donateur>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Association")]
	public partial class Association : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<double> _solde;
		
		private System.Nullable<int> _Annee;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnsoldeChanging(System.Nullable<double> value);
    partial void OnsoldeChanged();
    partial void OnAnneeChanging(System.Nullable<int> value);
    partial void OnAnneeChanged();
    #endregion
		
		public Association()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solde", DbType="Float")]
		public System.Nullable<double> solde
		{
			get
			{
				return this._solde;
			}
			set
			{
				if ((this._solde != value))
				{
					this.OnsoldeChanging(value);
					this.SendPropertyChanging();
					this._solde = value;
					this.SendPropertyChanged("solde");
					this.OnsoldeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Annee", DbType="Int")]
		public System.Nullable<int> Annee
		{
			get
			{
				return this._Annee;
			}
			set
			{
				if ((this._Annee != value))
				{
					this.OnAnneeChanging(value);
					this.SendPropertyChanging();
					this._Annee = value;
					this.SendPropertyChanged("Annee");
					this.OnAnneeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Donateur")]
	public partial class Donateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NumDonateur;
		
		private string _NomDonateur;
		
		private System.Nullable<double> _solde;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumDonateurChanging(int value);
    partial void OnNumDonateurChanged();
    partial void OnNomDonateurChanging(string value);
    partial void OnNomDonateurChanged();
    partial void OnsoldeChanging(System.Nullable<double> value);
    partial void OnsoldeChanged();
    #endregion
		
		public Donateur()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumDonateur", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NumDonateur
		{
			get
			{
				return this._NumDonateur;
			}
			set
			{
				if ((this._NumDonateur != value))
				{
					this.OnNumDonateurChanging(value);
					this.SendPropertyChanging();
					this._NumDonateur = value;
					this.SendPropertyChanged("NumDonateur");
					this.OnNumDonateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomDonateur", DbType="NChar(50)")]
		public string NomDonateur
		{
			get
			{
				return this._NomDonateur;
			}
			set
			{
				if ((this._NomDonateur != value))
				{
					this.OnNomDonateurChanging(value);
					this.SendPropertyChanging();
					this._NomDonateur = value;
					this.SendPropertyChanged("NomDonateur");
					this.OnNomDonateurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_solde", DbType="Float")]
		public System.Nullable<double> solde
		{
			get
			{
				return this._solde;
			}
			set
			{
				if ((this._solde != value))
				{
					this.OnsoldeChanging(value);
					this.SendPropertyChanging();
					this._solde = value;
					this.SendPropertyChanged("solde");
					this.OnsoldeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
